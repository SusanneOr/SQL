---In this project I used a dataset which represents a digital media store. The dataset includes tables for customers, artists, albums, media tracks and invoices.


--Find the Invoices of customers who are from Brazil. The resulting table should show the customer's full name, Invoice ID, Date of the invoice, and billing country--

SELECT cus.FirstName, cus.LastName, cus.Email, inv.InvoiceId, inv.InvoiceDate,inv.BillingCountry
FROM customers cus
LEFT JOIN invoices inv
ON cus.CustomerId=inv.CustomerId
WHERE cus.Country= "Brazil"
;

--Show the Employees who are Sales Agents--

SELECT *
FROM employees
WHERE Title LIKE "Sales%";

--Find a unique/distinct list of billing countries from the Invoice table--

SELECT DISTINCT BillingCountry
FROM invoices;

--Provide a query that shows the invoices associated with each sales agent. The resulting table should include the Sales Agent's full name--

SELECT emp.FirstName, emp.LastName, inv.* 
FROM employees emp
JOIN customers cus
ON emp.EmployeeID=cus.CustomerId
JOIN invoices inv
ON inv.CustomerID=cus.CustomerID;

--Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers--

SELECT inv.total, cus.FirstName, cus.LastName, emp.FirstName, emp.LastName
FROM employees emp
JOIN customers cus
ON emp.EmployeeID=cus.CustomerId
JOIN invoices inv
ON inv.CustomerID=cus.CustomerID;

--How many Invoices were there in 2009?--

SELECT COUNT(InvoiceId)
FROM invoices
WHERE InvoiceDate LIKE "2009%";

--What are the total sales for 2009?--

SELECT SUM(Total)
FROM invoices
WHERE InvoiceDate LIKE "2009%";

--Write a query that includes the purchased track name with each invoice line ID--

SELECT tra.Name, invi.InvoiceLineId
FROM invoice_items invi
JOIN tracks tra
ON invi.TrackId=tra.TrackId;

--Write a query that includes the purchased track name AND artist name with each invoice line ID--

SELECT invi.InvoiceLineId, tra.Name AS TrackName,art.Name AS ArtistName
FROM invoice_items invi
LEFT JOIN tracks tra
ON invi.TrackId=tra.TrackId
INNER JOIN albums alb
ON tra.AlbumID=alb.AlbumId
LEFT JOIN artists art
ON alb.ArtistId=art.ArtistId;

-- Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre-- 

SELECT tra.Name AS TrackName, alb.Title AS AlbumName, med.Name AS MediaName, gen.Name AS Genre
FROM tracks tra
JOIN albums alb
ON tra.AlbumID=alb.AlbumID
JOIN genres gen
ON gen.GenreId=tra.GenreID
JOIN media_types med
ON med.MediaTypeId=tra.MediaTypeId;

-- Show the total sales made by each sales agent--

SELECT emp.FirstName, emp.EmployeeId, ROUND(SUM(Inv.Total), 2) as 'Total Sales'
FROM invoices inv
JOIN customers cus
ON inv.CustomerId=cus.CustomerId
JOIN employees emp
ON emp.EmployeeId=SupportRepId
WHERE emp.Title = 'Sales Support Agent' 
GROUP BY emp.FirstName;

-- Which sales agent made the most dollars in sales in 2009?-- 

SELECT emp.FirstName, emp.EmployeeId, ROUND(SUM(Inv.Total), 2) as 'Total Sales'
FROM invoices inv
JOIN customers cus
ON inv.CustomerId=cus.CustomerId
JOIN employees emp
ON emp.EmployeeId=SupportRepId
WHERE emp.Title = 'Sales Support Agent'
AND inv.InvoiceDate LIKE "2009%" 
GROUP BY emp.FirstName
ORDER BY (round(sum(Inv.Total), 2))  DESC LIMIT 1;


-- Who is our best customer--

SELECT inv.CustomerId,cus.FirstName, cus.LastName, cus.Email, SUM(inv.Total)
FROM invoices inv
LEFT JOIN customers cus
ON inv.CustomerId=cus.CustomerId
GROUP BY inv.CustomerId
ORDER BY SUM(Total) desc
LIMIT 10;

-- Which song was most popular?-- 

SELECT inv.TrackID, tra.Name, SUM(inv.UnitPrice*inv.Quantity) AS revenue
FROM invoice_items inv
JOIN tracks tra
ON inv.TrackId=tra.TrackId
GROUP BY inv.TrackId
Order BY SUM(inv.UnitPrice*inv.Quantity) desc;

--Find which state in the United States has the least purchased tracks from the Rock And Roll genre in order to identify which state we should promote Rock And Roll in to increase sales. ELECT cust.state, SUM(items.trackid) * quantity AS 'Total Tracks Purchased' 
 
SELECT cust.state, SUM(items.trackid) * quantity AS 'Total Tracks Purchased' 
 FROM chinook.customers cust 
 JOIN chinook.invoices inv 
 ON cust.customerid = inv.customerid 
 JOIN chinook.invoice_items items 
 ON inv.invoiceid = items.invoiceid 
 JOIN chinook.tracks tracks 
 ON items.trackid = tracks.trackid 
 JOIN chinook.genres gen 
 ON tracks.genreid = gen.genreid 
 WHERE gen.name = 'Rock And Roll' 
 GROUP BY cust.state
 ORDER BY SUM(items.trackid) * quantity ASC
 LIMIT 1
 ;
 
--Show how many tracks are in each genre and include the percentage of tracks in each genre.

SELECT gen.name, COUNT(tracks.trackid) AS NumTracks, COUNT(tracks.trackid)/CAST(
(
SELECT COUNT(tracks.trackid)
FROM chinook.tracks) AS FLOAT)* 100 AS Persentage
FROM chinook.genres gen
JOIN chinook.tracks tracks
ON gen.genreid=tracks.genreid
GROUP BY gen.name
ORDER BY Persentage desc
;

-- Find the top 10 customers by the number of invoices --

SELECT cus.CustomerId,
cus.FirstName || ' ' || cus.LastName AS CustomerName, COUNT(Distinct inv.InvoiceId) AS number_of_Invoices
FROM chinook.customers cus
JOIN chinook.invoices inv
ON cus.CustomerId=inv.CustomerId
GROUP BY cus.CustomerId
ORDER BY number_of_Invoices desc
LIMIT 10;

-- Find the most popular artist by the number of tracks sold --

SELECT art.ArtistId, art.Name AS Artist_name, COUNT(DISTINCT invi.TrackId) AS number_tracks_sold
FROM chinook.artists art
JOIN chinook.albums alb
ON art.ArtistId=alb.ArtistId
JOIN chinook.tracks tra
ON alb.AlbumId=tra.AlbumId
JOIN chinook.invoice_items invi
ON tra.TrackId=invi.TrackId
GROUP BY art.name
ORDER BY number_tracks_sold desc
LIMIT 1
;

-- Find the average revenue per customer by country --

SELECT cus.Country, AVG(inv.Total) AS avg_total
FROM chinook.customers cus
JOIN chinook.invoices inv
ON cus.CustomerID=inv.CustomerID
GROUP BY cus.Country
;

-- Find the customers who have spent the most money overall --

SELECT cus.CustomerId, cus.FirstName || ' ' || cus.LastName AS CustomerName, SUM(inv.Total) AS Total_spent
FROM chinook.customers cus
JOIN chinook.invoices inv
ON cus.CustomerID=inv.CustomerID
GROUP BY cus.CustomerId
ORDER BY Total_spent desc
LIMIT 1
;

